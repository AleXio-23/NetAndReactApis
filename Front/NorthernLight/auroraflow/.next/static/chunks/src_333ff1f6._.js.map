{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aleksandre/Desktop/NetAndReactApis/Front/NorthernLight/auroraflow/src/app/registry.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { useServerInsertedHTML } from 'next/navigation';\r\nimport { ServerStyleSheet, StyleSheetManager } from 'styled-components';\r\n\r\nexport default function StyledComponentsRegistry({ children }: { children: React.ReactNode }) {\r\n  // Only create stylesheet once with lazy initial state\r\n  const [styledComponentsStyleSheet] = useState(() => new ServerStyleSheet());\r\n\r\n  useServerInsertedHTML(() => {\r\n    const styles = styledComponentsStyleSheet.getStyleElement();\r\n    styledComponentsStyleSheet.instance.clearTag();\r\n    return <>{styles}</>;\r\n  });\r\n\r\n  if (typeof window !== 'undefined') return <>{children}</>;\r\n\r\n  return (\r\n    <StyleSheetManager sheet={styledComponentsStyleSheet.instance}>\r\n      <>{children}</>\r\n    </StyleSheetManager>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS,yBAAyB,EAAE,QAAQ,EAAiC;;IAC1F,sDAAsD;IACtD,MAAM,CAAC,2BAA2B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;6CAAE,IAAM,IAAI,yLAAA,CAAA,mBAAgB;;IAExE,CAAA,GAAA,qIAAA,CAAA,wBAAqB,AAAD;0DAAE;YACpB,MAAM,SAAS,2BAA2B,eAAe;YACzD,2BAA2B,QAAQ,CAAC,QAAQ;YAC5C,qBAAO;0BAAG;;QACZ;;IAEA,wCAAmC,qBAAO;kBAAG;;;AAO/C;GAjBwB;;QAItB,qIAAA,CAAA,wBAAqB;;;KAJC","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aleksandre/Desktop/NetAndReactApis/Front/NorthernLight/auroraflow/src/theme/ThemeProvider.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { createContext, useState, useEffect, ReactNode } from 'react';\r\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\r\n\r\ninterface ThemeProps {\r\n  primary: string;\r\n  secondary: string;\r\n  background: string;\r\n  cardBackground: string;\r\n  text: string;\r\n  inputBorder: string;\r\n  inputBackground: string;\r\n  buttonText: string;\r\n  isDark: boolean;\r\n}\r\n\r\ninterface ThemeContextProps {\r\n  theme: ThemeProps;\r\n  toggleTheme: () => void;\r\n}\r\n\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst lightTheme: ThemeProps = {\r\n  primary: '#7c3aed', // violet\r\n  secondary: '#3b82f6', // blue\r\n  background: '#ffffff',\r\n  cardBackground: '#f9fafb',\r\n  text: '#111827',\r\n  inputBorder: '#d1d5db',\r\n  inputBackground: '#ffffff',\r\n  buttonText: '#ffffff',\r\n  isDark: false\r\n};\r\n\r\nconst darkTheme: ThemeProps = {\r\n  primary: '#8b5cf6', // lighter violet for dark mode\r\n  secondary: '#60a5fa', // lighter blue for dark mode\r\n  background: '#111827',\r\n  cardBackground: '#1f2937',\r\n  text: '#f9fafb',\r\n  inputBorder: '#374151',\r\n  inputBackground: '#1f2937',\r\n  buttonText: '#ffffff',\r\n  isDark: true\r\n};\r\n\r\nexport const ThemeContext = createContext<ThemeContextProps>({\r\n  theme: lightTheme,\r\n  toggleTheme: () => {}\r\n});\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState<boolean>(false);\r\n  \r\n  useEffect(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme === 'dark') {\r\n      setIsDarkMode(true);\r\n    }\r\n  }, []);\r\n  \r\n  const toggleTheme = (): void => {\r\n    setIsDarkMode(!isDarkMode);\r\n    localStorage.setItem('theme', !isDarkMode ? 'dark' : 'light');\r\n  };\r\n  \r\n  const theme = isDarkMode ? darkTheme : lightTheme;\r\n  \r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      <StyledThemeProvider theme={theme}>\r\n        {children}\r\n      </StyledThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n}; "],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AA0BA,MAAM,aAAyB;IAC7B,SAAS;IACT,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,MAAM;IACN,aAAa;IACb,iBAAiB;IACjB,YAAY;IACZ,QAAQ;AACV;AAEA,MAAM,YAAwB;IAC5B,SAAS;IACT,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,MAAM;IACN,aAAa;IACb,iBAAiB;IACjB,YAAY;IACZ,QAAQ;AACV;AAEO,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAqB;IAC3D,OAAO;IACP,aAAa,KAAO;AACtB;AAEO,MAAM,gBAA8C,CAAC,EAAE,QAAQ,EAAE;;IACtE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAEtD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,eAAe,QAAQ;gBACzB,cAAc;YAChB;QACF;kCAAG,EAAE;IAEL,MAAM,cAAc;QAClB,cAAc,CAAC;QACf,aAAa,OAAO,CAAC,SAAS,CAAC,aAAa,SAAS;IACvD;IAEA,MAAM,QAAQ,aAAa,YAAY;IAEvC,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAY;kBACjD,cAAA,6LAAC,yLAAA,CAAA,gBAAmB;YAAC,OAAO;sBACzB;;;;;;;;;;;AAIT;GAxBa;KAAA","debugId":null}}]
}
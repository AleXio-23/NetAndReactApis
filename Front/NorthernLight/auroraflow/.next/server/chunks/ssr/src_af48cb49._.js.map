{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aleksandre/Desktop/NetAndReactApis/Front/NorthernLight/auroraflow/src/theme/ThemeProvider.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { createContext, useState, useEffect, ReactNode } from 'react';\r\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\r\n\r\ninterface ThemeProps {\r\n  primary: string;\r\n  secondary: string;\r\n  background: string;\r\n  cardBackground: string;\r\n  text: string;\r\n  inputBorder: string;\r\n  inputBackground: string;\r\n  buttonText: string;\r\n  isDark: boolean;\r\n}\r\n\r\ninterface ThemeContextProps {\r\n  theme: ThemeProps;\r\n  toggleTheme: () => void;\r\n}\r\n\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst lightTheme: ThemeProps = {\r\n  primary: '#7c3aed', // violet\r\n  secondary: '#3b82f6', // blue\r\n  background: '#ffffff',\r\n  cardBackground: '#f9fafb',\r\n  text: '#111827',\r\n  inputBorder: '#d1d5db',\r\n  inputBackground: '#ffffff',\r\n  buttonText: '#ffffff',\r\n  isDark: false\r\n};\r\n\r\nconst darkTheme: ThemeProps = {\r\n  primary: '#8b5cf6', // lighter violet for dark mode\r\n  secondary: '#60a5fa', // lighter blue for dark mode\r\n  background: '#111827',\r\n  cardBackground: '#1f2937',\r\n  text: '#f9fafb',\r\n  inputBorder: '#374151',\r\n  inputBackground: '#1f2937',\r\n  buttonText: '#ffffff',\r\n  isDark: true\r\n};\r\n\r\nexport const ThemeContext = createContext<ThemeContextProps>({\r\n  theme: lightTheme,\r\n  toggleTheme: () => {}\r\n});\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState<boolean>(false);\r\n  \r\n  useEffect(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme === 'dark') {\r\n      setIsDarkMode(true);\r\n    }\r\n  }, []);\r\n  \r\n  const toggleTheme = (): void => {\r\n    setIsDarkMode(!isDarkMode);\r\n    localStorage.setItem('theme', !isDarkMode ? 'dark' : 'light');\r\n  };\r\n  \r\n  const theme = isDarkMode ? darkTheme : lightTheme;\r\n  \r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      <StyledThemeProvider theme={theme}>\r\n        {children}\r\n      </StyledThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n}; "],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AA0BA,MAAM,aAAyB;IAC7B,SAAS;IACT,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,MAAM;IACN,aAAa;IACb,iBAAiB;IACjB,YAAY;IACZ,QAAQ;AACV;AAEA,MAAM,YAAwB;IAC5B,SAAS;IACT,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,MAAM;IACN,aAAa;IACb,iBAAiB;IACjB,YAAY;IACZ,QAAQ;AACV;AAEO,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAqB;IAC3D,OAAO;IACP,aAAa,KAAO;AACtB;AAEO,MAAM,gBAA8C,CAAC,EAAE,QAAQ,EAAE;IACtE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAEtD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,eAAe,QAAQ;YACzB,cAAc;QAChB;IACF,GAAG,EAAE;IAEL,MAAM,cAAc;QAClB,cAAc,CAAC;QACf,aAAa,OAAO,CAAC,SAAS,CAAC,aAAa,SAAS;IACvD;IAEA,MAAM,QAAQ,aAAa,YAAY;IAEvC,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAY;kBACjD,cAAA,8OAAC,2KAAA,CAAA,gBAAmB;YAAC,OAAO;sBACzB;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aleksandre/Desktop/NetAndReactApis/Front/NorthernLight/auroraflow/src/components/ThemeToggle.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ThemeContext } from '../theme/ThemeProvider';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst ToggleButton = styled.button`\r\n  background: transparent;\r\n  border: none;\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: color 0.2s ease;\r\n  \r\n  &:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const ThemeToggle: React.FC = () => {\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n  const { t } = useTranslation();\r\n  \r\n  return (\r\n    <ToggleButton onClick={toggleTheme} aria-label={t('header.darkMode')}>\r\n      {theme.isDark ? '‚òÄÔ∏è' : 'üåô'}\r\n    </ToggleButton>\r\n  );\r\n}; "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AALA;;;;;;AAOA,MAAM,eAAe,2KAAA,CAAA,UAAM,CAAC,MAAM,CAAC;;;SAG1B,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,IAAI,CAAC;;;;;;;;;;WAU1B,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,OAAO,CAAC;;AAE1C,CAAC;AAEM,MAAM,cAAwB;IACnC,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,8HAAA,CAAA,eAAY;IACtD,MAAM,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,gKAAA,CAAA,iBAAc,AAAD;IAE3B,qBACE,8OAAC;QAAa,SAAS;QAAa,cAAY,EAAE;kBAC/C,MAAM,MAAM,GAAG,OAAO;;;;;;AAG7B","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aleksandre/Desktop/NetAndReactApis/Front/NorthernLight/auroraflow/src/components/LanguageSelector.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst SelectContainer = styled.div`\r\n  position: relative;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  appearance: none;\r\n  background-color: transparent;\r\n  border: 1px solid ${({ theme }) => theme.inputBorder};\r\n  border-radius: 0.375rem;\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  font-size: 0.875rem;\r\n  padding: 0.5rem 2rem 0.5rem 0.75rem;\r\n  transition: border-color 0.2s ease;\r\n  \r\n  &:hover, &:focus {\r\n    border-color: ${({ theme }) => theme.primary};\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Arrow = styled.div`\r\n  position: absolute;\r\n  right: 0.75rem;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  pointer-events: none;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nexport const LanguageSelector: React.FC = () => {\r\n  const { i18n } = useTranslation();\r\n  \r\n  const changeLanguage = (event: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    i18n.changeLanguage(event.target.value);\r\n  };\r\n  \r\n  return (\r\n    <SelectContainer>\r\n      <Select value={i18n.language} onChange={changeLanguage}>\r\n        <option value=\"en\">English</option>\r\n        <option value=\"ru\">–†—É—Å—Å–∫–∏–π</option>\r\n      </Select>\r\n      <Arrow>‚ñº</Arrow>\r\n    </SelectContainer>\r\n  );\r\n}; "],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AAJA;;;;AAMA,MAAM,kBAAkB,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;AAGnC,CAAC;AAED,MAAM,SAAS,2KAAA,CAAA,UAAM,CAAC,MAAM,CAAC;;;oBAGT,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,WAAW,CAAC;;SAE9C,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,IAAI,CAAC;;;;;;;kBAOnB,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,OAAO,CAAC;;;AAGjD,CAAC;AAED,MAAM,QAAQ,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;;;;SAMhB,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,IAAI,CAAC;AACrC,CAAC;AAEM,MAAM,mBAA6B;IACxC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,gKAAA,CAAA,iBAAc,AAAD;IAE9B,MAAM,iBAAiB,CAAC;QACtB,KAAK,cAAc,CAAC,MAAM,MAAM,CAAC,KAAK;IACxC;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAO,OAAO,KAAK,QAAQ;gBAAE,UAAU;;kCACtC,8OAAC;wBAAO,OAAM;kCAAK;;;;;;kCACnB,8OAAC;wBAAO,OAAM;kCAAK;;;;;;;;;;;;0BAErB,8OAAC;0BAAM;;;;;;;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aleksandre/Desktop/NetAndReactApis/Front/NorthernLight/auroraflow/src/components/SignIn.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, FormEvent } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ThemeToggle } from './ThemeToggle';\r\nimport { LanguageSelector } from './LanguageSelector';\r\n\r\nconst PageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  background-color: ${({ theme }) => theme.background};\r\n  color: ${({ theme }) => theme.text};\r\n  transition: background-color 0.2s ease, color 0.2s ease;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem 2rem;\r\n`;\r\n\r\nconst Logo = styled.h1`\r\n  color: ${({ theme }) => theme.primary};\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin: 0;\r\n  background: linear-gradient(to right, ${({ theme }) => theme.primary}, ${({ theme }) => theme.secondary});\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n`;\r\n\r\nconst HeaderControls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst MainContent = styled.main`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst SignInCard = styled.div`\r\n  background-color: ${({ theme }) => theme.cardBackground};\r\n  border-radius: 0.75rem;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  padding: 2.5rem;\r\n  width: 100%;\r\n  max-width: 28rem;\r\n  transition: background-color 0.2s ease;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.25rem;\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  background-color: ${({ theme }) => theme.inputBackground};\r\n  border: 1px solid ${({ theme }) => theme.inputBorder};\r\n  border-radius: 0.375rem;\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1rem;\r\n  padding: 0.75rem 1rem;\r\n  width: 100%;\r\n  transition: border-color 0.2s ease, background-color 0.2s ease;\r\n  \r\n  &:focus {\r\n    border-color: ${({ theme }) => theme.primary};\r\n    outline: none;\r\n  }\r\n  \r\n  &::placeholder {\r\n    color: #9ca3af;\r\n  }\r\n`;\r\n\r\nconst PasswordButton = styled.button`\r\n  background: transparent;\r\n  border: none;\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: 1rem;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nconst SignInButton = styled.button`\r\n  background: linear-gradient(to right, ${({ theme }) => theme.primary}, ${({ theme }) => theme.secondary});\r\n  border: none;\r\n  border-radius: 0.375rem;\r\n  color: ${({ theme }) => theme.buttonText};\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  margin-top: 0.5rem;\r\n  padding: 0.75rem;\r\n  transition: opacity 0.2s ease;\r\n  \r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 1.5rem 0;\r\n  \r\n  &::before, &::after {\r\n    content: '';\r\n    flex: 1;\r\n    border-bottom: 1px solid ${({ theme }) => theme.inputBorder};\r\n  }\r\n  \r\n  span {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 0.875rem;\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\n\r\nconst GoogleButton = styled.button`\r\n  background-color: white;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 0.375rem;\r\n  color: #4b5563;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  gap: 0.75rem;\r\n  padding: 0.75rem;\r\n  transition: background-color 0.2s ease;\r\n  \r\n  &:hover {\r\n    background-color: #f9fafb;\r\n  }\r\n  \r\n  svg {\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst FooterText = styled.p`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 0.875rem;\r\n  margin-top: 1.5rem;\r\n  text-align: center;\r\n  \r\n  a {\r\n    color: ${({ theme }) => theme.primary};\r\n    font-weight: 500;\r\n    text-decoration: none;\r\n    \r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SignIn: React.FC = () => {\r\n  const [showPassword, setShowPassword] = useState<boolean>(false);\r\n  const { t } = useTranslation();\r\n  \r\n  const togglePasswordVisibility = (): void => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n  \r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n    // Add sign-in logic here\r\n  };\r\n  \r\n  return (\r\n    <PageContainer>\r\n      <Header>\r\n        <Logo>AuroraFlow</Logo>\r\n        <HeaderControls>\r\n          <ThemeToggle />\r\n          <LanguageSelector />\r\n        </HeaderControls>\r\n      </Header>\r\n      \r\n      <MainContent>\r\n        <SignInCard>\r\n          <Title>{t('signIn.title')}</Title>\r\n          \r\n          <Form onSubmit={handleSubmit}>\r\n            <InputGroup>\r\n              <Label htmlFor=\"email\">{t('signIn.email')}</Label>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"example@email.com\"\r\n                required\r\n              />\r\n            </InputGroup>\r\n            \r\n            <InputGroup>\r\n              <Label htmlFor=\"password\">{t('signIn.password')}</Label>\r\n              <InputWrapper>\r\n                <Input\r\n                  id=\"password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\r\n                  required\r\n                />\r\n                <PasswordButton\r\n                  type=\"button\"\r\n                  onClick={togglePasswordVisibility}\r\n                  aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                >\r\n                  {showPassword ? \"üëÅÔ∏è\" : \"üëÅÔ∏è‚Äçüó®Ô∏è\"}\r\n                </PasswordButton>\r\n              </InputWrapper>\r\n            </InputGroup>\r\n            \r\n            <SignInButton type=\"submit\">\r\n              {t('signIn.signInButton')}\r\n            </SignInButton>\r\n          </Form>\r\n          \r\n          <Divider>\r\n            <span>OR</span>\r\n          </Divider>\r\n          \r\n          <GoogleButton type=\"button\">\r\n            <svg viewBox=\"0 0 24 24\">\r\n              <path \r\n                fill=\"#4285F4\" \r\n                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\" \r\n              />\r\n              <path \r\n                fill=\"#34A853\" \r\n                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\" \r\n              />\r\n              <path \r\n                fill=\"#FBBC05\" \r\n                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\" \r\n              />\r\n              <path \r\n                fill=\"#EA4335\" \r\n                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\" \r\n              />\r\n            </svg>\r\n            {t('signIn.signInWithGoogle')}\r\n          </GoogleButton>\r\n          \r\n          <FooterText>\r\n            <a href=\"#\">{t('signIn.forgotPassword')}</a> ‚Ä¢ <a href=\"#\">{t('signIn.dontHaveAccount')}</a>\r\n          </FooterText>\r\n        </SignInCard>\r\n      </MainContent>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default SignIn; "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AANA;;;;;;;AAQA,MAAM,gBAAgB,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;;oBAIb,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,UAAU,CAAC;SAC7C,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,IAAI,CAAC;;AAErC,CAAC;AAED,MAAM,SAAS,2KAAA,CAAA,UAAM,CAAC,MAAM,CAAC;;;;;AAK7B,CAAC;AAED,MAAM,OAAO,2KAAA,CAAA,UAAM,CAAC,EAAE,CAAC;SACd,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,OAAO,CAAC;;;;wCAIA,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,SAAS,CAAC;;;AAG1G,CAAC;AAED,MAAM,iBAAiB,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;AAGlC,CAAC;AAED,MAAM,cAAc,2KAAA,CAAA,UAAM,CAAC,IAAI,CAAC;;;;;;AAMhC,CAAC;AAED,MAAM,aAAa,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;oBACV,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,cAAc,CAAC;;;;;;;AAO1D,CAAC;AAED,MAAM,QAAQ,2KAAA,CAAA,UAAM,CAAC,EAAE,CAAC;SACf,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,IAAI,CAAC;;;;;AAKrC,CAAC;AAED,MAAM,OAAO,2KAAA,CAAA,UAAM,CAAC,IAAI,CAAC;;;;AAIzB,CAAC;AAED,MAAM,aAAa,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;;AAI9B,CAAC;AAED,MAAM,QAAQ,2KAAA,CAAA,UAAM,CAAC,KAAK,CAAC;SAClB,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,IAAI,CAAC;;;AAGrC,CAAC;AAED,MAAM,eAAe,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;AAEhC,CAAC;AAED,MAAM,QAAQ,2KAAA,CAAA,UAAM,CAAC,KAAK,CAAC;oBACP,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,eAAe,CAAC;oBACvC,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,WAAW,CAAC;;SAE9C,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,IAAI,CAAC;;;;;;;kBAOnB,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,OAAO,CAAC;;;;;;;AAOjD,CAAC;AAED,MAAM,iBAAiB,2KAAA,CAAA,UAAM,CAAC,MAAM,CAAC;;;SAG5B,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,IAAI,CAAC;;;;;;AAMrC,CAAC;AAED,MAAM,eAAe,2KAAA,CAAA,UAAM,CAAC,MAAM,CAAC;wCACK,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,SAAS,CAAC;;;SAGjG,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,UAAU,CAAC;;;;;;;;;;;AAW3C,CAAC;AAED,MAAM,UAAU,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;;;;;;6BAQE,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,WAAW,CAAC;;;;WAIrD,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,IAAI,CAAC;;;;AAIvC,CAAC;AAED,MAAM,eAAe,2KAAA,CAAA,UAAM,CAAC,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;AAuBnC,CAAC;AAED,MAAM,aAAa,2KAAA,CAAA,UAAM,CAAC,CAAC,CAAC;SACnB,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,IAAI,CAAC;;;;;;WAM1B,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,OAAO,CAAC;;;;;;;;AAQ1C,CAAC;AAED,MAAM,SAAmB;IACvB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAC1D,MAAM,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,gKAAA,CAAA,iBAAc,AAAD;IAE3B,MAAM,2BAA2B;QAC/B,gBAAgB,CAAC;IACnB;IAEA,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;IAChB,yBAAyB;IAC3B;IAEA,qBACE,8OAAC;;0BACC,8OAAC;;kCACC,8OAAC;kCAAK;;;;;;kCACN,8OAAC;;0CACC,8OAAC,iIAAA,CAAA,cAAW;;;;;0CACZ,8OAAC,sIAAA,CAAA,mBAAgB;;;;;;;;;;;;;;;;;0BAIrB,8OAAC;0BACC,cAAA,8OAAC;;sCACC,8OAAC;sCAAO,EAAE;;;;;;sCAEV,8OAAC;4BAAK,UAAU;;8CACd,8OAAC;;sDACC,8OAAC;4CAAM,SAAQ;sDAAS,EAAE;;;;;;sDAC1B,8OAAC;4CACC,IAAG;4CACH,MAAK;4CACL,aAAY;4CACZ,QAAQ;;;;;;;;;;;;8CAIZ,8OAAC;;sDACC,8OAAC;4CAAM,SAAQ;sDAAY,EAAE;;;;;;sDAC7B,8OAAC;;8DACC,8OAAC;oDACC,IAAG;oDACH,MAAM,eAAe,SAAS;oDAC9B,aAAY;oDACZ,QAAQ;;;;;;8DAEV,8OAAC;oDACC,MAAK;oDACL,SAAS;oDACT,cAAY,eAAe,kBAAkB;8DAE5C,eAAe,QAAQ;;;;;;;;;;;;;;;;;;8CAK9B,8OAAC;oCAAa,MAAK;8CAChB,EAAE;;;;;;;;;;;;sCAIP,8OAAC;sCACC,cAAA,8OAAC;0CAAK;;;;;;;;;;;sCAGR,8OAAC;4BAAa,MAAK;;8CACjB,8OAAC;oCAAI,SAAQ;;sDACX,8OAAC;4CACC,MAAK;4CACL,GAAE;;;;;;sDAEJ,8OAAC;4CACC,MAAK;4CACL,GAAE;;;;;;sDAEJ,8OAAC;4CACC,MAAK;4CACL,GAAE;;;;;;sDAEJ,8OAAC;4CACC,MAAK;4CACL,GAAE;;;;;;;;;;;;gCAGL,EAAE;;;;;;;sCAGL,8OAAC;;8CACC,8OAAC;oCAAE,MAAK;8CAAK,EAAE;;;;;;gCAA6B;8CAAG,8OAAC;oCAAE,MAAK;8CAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM1E;uCAEe","debugId":null}},
    {"offset": {"line": 677, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aleksandre/Desktop/NetAndReactApis/Front/NorthernLight/auroraflow/src/i18n.ts"],"sourcesContent":["import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\nimport enTranslation from './locales/en/translation.json';\r\nimport ruTranslation from './locales/ru/translation.json';\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: {\r\n        translation: enTranslation\r\n      },\r\n      ru: {\r\n        translation: ruTranslation\r\n      }\r\n    },\r\n    fallbackLng: 'en',\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  });\r\n\r\nexport default i18n; "],"names":[],"mappings":";;;AAAA;AACA;AAAA;AACA;AAEA;AACA;;;;;;AAEA,iJAAA,CAAA,UAAI,CACD,GAAG,CAAC,uMAAA,CAAA,UAAgB,EACpB,GAAG,CAAC,kKAAA,CAAA,mBAAgB,EACpB,IAAI,CAAC;IACJ,WAAW;QACT,IAAI;YACF,aAAa,2GAAA,CAAA,UAAa;QAC5B;QACA,IAAI;YACF,aAAa,2GAAA,CAAA,UAAa;QAC5B;IACF;IACA,aAAa;IACb,eAAe;QACb,aAAa;IACf;AACF;uCAEa,iJAAA,CAAA,UAAI","debugId":null}},
    {"offset": {"line": 712, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aleksandre/Desktop/NetAndReactApis/Front/NorthernLight/auroraflow/src/app/signin/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport SignIn from '@/components/SignIn';\r\nimport { ThemeProvider } from '@/theme/ThemeProvider';\r\nimport '@/i18n';\r\n\r\nexport default function SignInPage() {\r\n  return (\r\n    <ThemeProvider>\r\n      <SignIn />\r\n    </ThemeProvider>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AAOe,SAAS;IACtB,qBACE,8OAAC,8HAAA,CAAA,gBAAa;kBACZ,cAAA,8OAAC,4HAAA,CAAA,UAAM;;;;;;;;;;AAGb","debugId":null}}]
}